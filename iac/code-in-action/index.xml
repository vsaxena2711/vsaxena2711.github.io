<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Code in Action on AInfraMinds</title><link>https://ainframinds.com/iac/code-in-action/</link><description>Recent content in Code in Action on AInfraMinds</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 18 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://ainframinds.com/iac/code-in-action/index.xml" rel="self" type="application/rss+xml"/><item><title>Create an Azure Key Vault (RBAC-based) using Terraform &amp; Terragrunt</title><link>https://ainframinds.com/iac/code-in-action/azure-keyvault-rbac-module/</link><pubDate>Fri, 18 Apr 2025 00:00:00 +0000</pubDate><guid>https://ainframinds.com/iac/code-in-action/azure-keyvault-rbac-module/</guid><description>🔐 Overview In this guide, we’ll build a verbose and reusable Terraform module for provisioning an Azure Key Vault using RBAC-based access control — the recommended model by Microsoft.
We&amp;rsquo;ll also show how to call the module from a Terragrunt config file, keeping inputs clean and environment-friendly.
🤔 Access Policy vs. RBAC Model Azure Key Vault supports two access models:
Model Description Recommended? Access Policy Classic model where you explicitly define what each principal can do ❌ Legacy RBAC Uses Azure’s Role-Based Access Control via Azure AD ✅ Yes!</description></item><item><title>Deploy Azure VM using Terraform &amp; Terragrunt</title><link>https://ainframinds.com/iac/code-in-action/deploy-azure-vm-with-terragrunt/</link><pubDate>Mon, 14 Apr 2025 00:00:00 +0000</pubDate><guid>https://ainframinds.com/iac/code-in-action/deploy-azure-vm-with-terragrunt/</guid><description>🚀 Introduction In this post, we’ll walk through a practical example of deploying an Azure Virtual Machine using a reusable Terraform module, and orchestrating the inputs with Terragrunt.
Whether you&amp;rsquo;re spinning up a dev VM or preparing infrastructure for your next project, this setup is flexible, scalable, and clean — ideal for managing multiple environments with minimal duplication.
🔗 Code Repository All source code is hosted publicly on GitHub:
📁 Terraform Module: tf-brickstack/azure-vm-module</description></item></channel></rss>