<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Code in Action on AInfraMinds</title><link>https://ainframinds.com/iac/code-in-action/</link><description>Recent content in Code in Action on AInfraMinds</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 14 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://ainframinds.com/iac/code-in-action/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy Azure VM using Terraform &amp; Terragrunt</title><link>https://ainframinds.com/iac/code-in-action/deploy-azure-vm-with-terragrunt/</link><pubDate>Mon, 14 Apr 2025 00:00:00 +0000</pubDate><guid>https://ainframinds.com/iac/code-in-action/deploy-azure-vm-with-terragrunt/</guid><description>🚀 Introduction In this post, we’ll walk through a practical example of deploying an Azure Virtual Machine using a reusable Terraform module, and orchestrating the inputs with Terragrunt.
Whether you&amp;rsquo;re spinning up a dev VM or preparing infrastructure for your next project, this setup is flexible, scalable, and clean — ideal for managing multiple environments with minimal duplication.
🔗 Code Repository All source code is hosted publicly on GitHub:
📁 Terraform Module: tf-brickstack/azure-vm-module</description></item></channel></rss>